name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    name: Build and deploy PeterPortal
    runs-on: ubuntu-latest
    if: (github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'no deploy'))
    environment:
      name: ${{ (github.event_name == 'pull_request' && format('staging-{0}', github.event.pull_request.number)) || 'production'  }}
      url: https://${{ (github.event_name == 'pull_request' && format('staging-{0}.', github.event.pull_request.number)) || '' }}peterportal.org

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install
        env:
          HUSKY: 0

      - name: Build and deploy
        run: pnpm sst deploy --stage ${{ (github.event_name == 'pull_request' && format('staging-{0}', github.event.pull_request.number)) || 'prod'  }}
        env:
          CI: false
          PUBLIC_API_URL: ${{secrets.PUBLIC_API_URL}}
          DATABASE_URL: ${{ github.event_name == 'pull_request' && secrets.DEV_DATABASE_URL || secrets.PROD_DATABASE_URL }}
          SESSION_SECRET: ${{secrets.SESSION_SECRET}}
          GOOGLE_CLIENT: ${{secrets.GOOGLE_CLIENT}}
          GOOGLE_SECRET: ${{secrets.GOOGLE_SECRET}}
          GRECAPTCHA_SECRET: ${{secrets.GRECAPTCHA_SECRET}}
          ADMIN_EMAILS: ${{secrets.ADMIN_EMAILS}}
          PRODUCTION_DOMAIN: ${{secrets.PRODUCTION_DOMAIN}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NODE_ENV: ${{ github.event_name == 'pull_request' && 'staging' || 'production' }}
