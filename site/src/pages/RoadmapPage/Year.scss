@use '../../globals';

[data-theme='dark'] {
  .year-settings-btn:hover,
  .year-settings-btn:focus,
  .popover-body .year-settings-btn:active {
    background-color: var(--overlay2);
  }

  .edit-year-form {
    .form-control,
    .form-control:focus {
      background-color: var(--overlay1);
    }
  }
}

div.year {
  border-radius: 8px;
  container: roadmap-year / inline-size;

  @mixin year-subtext() {
    font-size: 16px;
    color: var(--mid-gray);
    @container roadmap-year (max-width: 512px) {
      margin-top: 4px;
      font-size: 14px;
    }
  }

  .year-header {
    display: flex;
    padding: 16px;
    align-items: center;

    button {
      margin: -2px;
    }

    button .MuiSvgIcon-root {
      font-size: 20px;
    }

    .action-row {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      margin-right: -4px;
      height: 20px;
    }

    .year-range {
      @include year-subtext();
    }

    .year-number,
    .course-count,
    .unit-count {
      font-weight: bold;
    }

    .year-title {
      color: var(--text);
      text-align: left;
      font-size: 18px;
    }
  }

  .year-stats {
    margin-block: 0;
    margin-inline: auto 8px;
    @include year-subtext();
  }

  @container roadmap-year (max-width: 512px) {
    .year-header {
      padding: 12px 16px;
      display: grid;
      grid-template-areas: 'A B' 'A C';
    }

    .year-title {
      display: flex;
      flex-direction: column;
      grid-area: A;
    }

    .year-stats {
      grid-area: C;
      margin-right: 0;
    }

    .action-row {
      grid-area: B;
    }
  }
}

.year-accordion-content {
  padding-inline: 16px;
  border-radius: var(--border-radius);
  display: grid;
  --min-quarter-width: 250px;
  grid-template-columns: repeat(auto-fill, minmax(var(--min-quarter-width), 1fr));
  gap: 20px;
  margin-block: 16px 4px;
}

// Each breakpoint is the width at which a quarter can be added to a year, given a min width of 250px.
// The corresponding value of --min-quarter-width is the maximum width that a quarter can be
// at that breakpoint with data-max-quarter-count quarters, without overflowing into a 2nd row.
// This code works up until 2598px wide, at which quarter count 5 doesn't extend to the full width.
// If there was a formula to calculate all of this, that would be extremely beneficial.

@media only screen and (min-width: 1108px) {
  .years[data-max-quarter-count='1'] .year-accordion-content {
    --min-quarter-width: 520px;
  }
}

@media only screen and (min-width: 1378px) {
  .years[data-max-quarter-count='2'] .year-accordion-content {
    --min-quarter-width: 380px;
  }
}

@media only screen and (min-width: 1648px) {
  .years[data-max-quarter-count='1'] .year-accordion-content {
    --min-quarter-width: 1060px;
  }
  .years[data-max-quarter-count='2'] .year-accordion-content {
    --min-quarter-width: 520px;
  }
  .years[data-max-quarter-count='3'] .year-accordion-content {
    --min-quarter-width: 340px;
  }
}

@media only screen and (min-width: 1918px) {
  .years[data-max-quarter-count='2'] .year-accordion-content {
    --min-quarter-width: 655px;
  }
  .years[data-max-quarter-count='3'] .year-accordion-content {
    --min-quarter-width: 430px;
  }
  .years[data-max-quarter-count='4'] .year-accordion-content {
    --min-quarter-width: 304px;
  }
}

@media only screen and (min-width: 2194px) {
  .years[data-max-quarter-count='3'] .year-accordion-content {
    --min-quarter-width: 520px;
  }
  .years[data-max-quarter-count='4'] .year-accordion-content {
    --min-quarter-width: 385px;
  }
  .years[data-max-quarter-count='5'] .year-accordion-content {
    --min-quarter-width: 304px;
  }
}

@media only screen and (min-width: 2532px) {
  .years[data-max-quarter-count='6'] .year-accordion-content {
    --min-quarter-width: 258px;
  }
}
